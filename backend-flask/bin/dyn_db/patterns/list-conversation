#!/usr/bin/env python3

import boto3
import sys
import os
import json
from datetime import datetime

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../')))

from lib.db import db


attrs = {
    'endpoint_url': "http://localhost:8000"
}

if len(sys.argv) == 2 and "prod" in sys.argv[1]:
    attrs = {}

# Connecting to the DynamoDB Local Server
ddb_client = boto3.client('dynamodb', **attrs)

# Extracting user_uuid of my_user
user_query = db.sql_template('users', 'user_by_handle')
user_uuid = db.query_wrap_object_json(user_query, 'elbadil')['uuid']
# print(user_uuid)

query_params = {
    'TableName': 'cruddur_messages',
    'KeyConditionExpression': 'pk = :pk',
    'ScanIndexForward': True,
    'Limit': 5,
    'ExpressionAttributeValues': {
        ':pk': {'S': f'GRP-{user_uuid}'}
    },
    'ReturnConsumedCapacity': 'TOTAL'
}

response = ddb_client.query(**query_params)

# print the consumed capacity
print(json.dumps(response['ConsumedCapacity'], sort_keys=True, indent=2))

# Returned Items
items = response['Items']

for item in items:
    other_user_handle = item['user_handle']['S']
    last_message = item['message']['S']
    timestamp = item['sk']['S']
    dt_object = datetime.strptime(timestamp, '%Y-%m-%dT%H:%M:%S.%f%z')
    formatted_datetime = dt_object.strftime('%Y-%m-%d %I:%M %p')
    print(f'{other_user_handle: <16}{formatted_datetime: <22}{last_message[:40]}...')
